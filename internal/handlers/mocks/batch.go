// Code generated by MockGen. DO NOT EDIT.
// Source: batch.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/dubrovsky1/url-shortener/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockBatchURLSaver is a mock of BatchURLSaver interface.
type MockBatchURLSaver struct {
	ctrl     *gomock.Controller
	recorder *MockBatchURLSaverMockRecorder
}

// MockBatchURLSaverMockRecorder is the mock recorder for MockBatchURLSaver.
type MockBatchURLSaverMockRecorder struct {
	mock *MockBatchURLSaver
}

// NewMockBatchURLSaver creates a new mock instance.
func NewMockBatchURLSaver(ctrl *gomock.Controller) *MockBatchURLSaver {
	mock := &MockBatchURLSaver{ctrl: ctrl}
	mock.recorder = &MockBatchURLSaverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBatchURLSaver) EXPECT() *MockBatchURLSaverMockRecorder {
	return m.recorder
}

// InsertBatch mocks base method.
func (m *MockBatchURLSaver) InsertBatch(arg0 context.Context, arg1 []models.BatchRequest, arg2 string) ([]models.BatchResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertBatch", arg0, arg1, arg2)
	ret0, _ := ret[0].([]models.BatchResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InsertBatch indicates an expected call of InsertBatch.
func (mr *MockBatchURLSaverMockRecorder) InsertBatch(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertBatch", reflect.TypeOf((*MockBatchURLSaver)(nil).InsertBatch), arg0, arg1, arg2)
}
